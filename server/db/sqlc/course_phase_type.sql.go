// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: course_phase_type.sql

package db

import (
	"context"
)

const getAllCoursePhaseTypes = `-- name: GetAllCoursePhaseTypes :many
SELECT id, name, required_input_meta_data, provided_output_meta_data, initial_phase FROM course_phase_type
`

func (q *Queries) GetAllCoursePhaseTypes(ctx context.Context) ([]CoursePhaseType, error) {
	rows, err := q.db.Query(ctx, getAllCoursePhaseTypes)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []CoursePhaseType
	for rows.Next() {
		var i CoursePhaseType
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.RequiredInputMetaData,
			&i.ProvidedOutputMetaData,
			&i.InitialPhase,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

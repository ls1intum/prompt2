// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: meta_data_graph.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const getMetaDataGraph = `-- name: GetMetaDataGraph :many
SELECT mg.from_phase_id, mg.to_phase_id
FROM meta_data_dependency_graph mg
JOIN course_phase cp
  ON mg.from_phase_id = cp.id
WHERE cp.course_id = $1
`

func (q *Queries) GetMetaDataGraph(ctx context.Context, courseID uuid.UUID) ([]MetaDataDependencyGraph, error) {
	rows, err := q.db.Query(ctx, getMetaDataGraph, courseID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []MetaDataDependencyGraph
	for rows.Next() {
		var i MetaDataDependencyGraph
		if err := rows.Scan(&i.FromPhaseID, &i.ToPhaseID); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: gitlab.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const addGitlabStatus = `-- name: AddGitlabStatus :exec
INSERT INTO student_gitlab_processes (course_phase_id, course_participation_id, gitlab_success)
VALUES ($1, $2, true)
ON CONFLICT (course_phase_id, course_participation_id)
DO UPDATE SET 
    gitlab_success = EXCLUDED.gitlab_success,
    updated_at = CURRENT_TIMESTAMP
`

type AddGitlabStatusParams struct {
	CoursePhaseID         uuid.UUID `json:"course_phase_id"`
	CourseParticipationID uuid.UUID `json:"course_participation_id"`
}

func (q *Queries) AddGitlabStatus(ctx context.Context, arg AddGitlabStatusParams) error {
	_, err := q.db.Exec(ctx, addGitlabStatus, arg.CoursePhaseID, arg.CourseParticipationID)
	return err
}

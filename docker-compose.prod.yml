version: "1.0"

services:
  reverse-proxy:
    image: traefik:v2.10
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=prompt-network"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=niclas.heun@tum.de"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--experimental.plugins.jwt.moduleName=github.com/traefik-plugins/traefik-jwt-plugin"
      - "--experimental.plugins.jwt.version=v0.7.1"
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
    networks:
      - prompt-network

  server-core:
    image: "ghcr.io/ls1intum/prompt2/prompt-server-core:${SERVER_CORE_IMAGE_TAG}"
    container_name: prompt-server-core
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server-core.rule=Host(`${CORE_HOST}`) && PathPrefix(`/api`)"
      - "traefik.http.services.server-core.loadbalancer.server.port=8080"
      - "traefik.http.routers.server-core.entrypoints=websecure"
      - "traefik.http.routers.server-core.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.api-ratelimit.ratelimit.average=300"
      - "traefik.http.middlewares.api-ratelimit.ratelimit.burst=100"
      - "traefik.http.routers.server-core.middlewares=api-ratelimit"
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "8080"
    environment:
      - CORE_HOST
      - SERVER_ADDRESS
      - DB_HOST
      - DB_PORT
      - DB_NAME
      - DB_PASSWORD
      - KEYCLOAK_HOST
      - KEYCLOAK_REALM_NAME
      - KEYCLOAK_CLIENT_ID
      - KEYCLOAK_CLIENT_SECRET
      - KEYCLOAK_ID_OF_CLIENT
      - KEYCLOAK_AUTHORIZED_PARTY
      - SMTP_HOST
      - SMTP_PORT
      - SENDER_EMAIL
      - SENDER_NAME
    networks:
      - prompt-network

  server-intro-course:
    image: "ghcr.io/ls1intum/prompt2/prompt-server-intro-course:${SERVER_INTRO_COURSE_IMAGE_TAG}"
    container_name: prompt-server-intro-course
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server-intro-course.rule=Host(`${CORE_HOST}`) && PathPrefix(`/intro-course/api`)"
      - "traefik.http.services.server-intro-course.loadbalancer.server.port=8080"
      - "traefik.http.routers.server-intro-course.entrypoints=websecure"
      - "traefik.http.routers.server-intro-course.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.api-ratelimit.ratelimit.average=300"
      - "traefik.http.middlewares.api-ratelimit.ratelimit.burst=100"
      - "traefik.http.routers.server-intro-course.middlewares=api-ratelimit"
    depends_on:
      db-intro-course:
        condition: service_healthy
    expose:
      - "8080"
    environment:
      - CORE_HOST
      - SERVER_CORE_HOST
      - SERVER_ADDRESS
      - DB_HOST_INTRO_COURSE
      - DB_PORT_INTRO_COURSE
      - DB_NAME
      - DB_PASSWORD
      - KEYCLOAK_HOST
      - KEYCLOAK_REALM_NAME
      - KEYCLOAK_AUTHORIZED_PARTY
      - KEYCLOAK_CLIENT_ID
      - GITLAB_ACCESS_TOKEN
    networks:
      - prompt-network

  server-team-allocation:
    image: "ghcr.io/ls1intum/prompt2/prompt-server-team-allocation:${SERVER_TEAM_ALLOCATION_IMAGE_TAG}"
    container_name: prompt-server-team-allocation
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server-team-allocation.rule=Host(`${CORE_HOST}`) && PathPrefix(`/team-allocation/api`)"
      - "traefik.http.services.server-team-allocation.loadbalancer.server.port=8080"
      - "traefik.http.routers.server-team-allocation.entrypoints=websecure"
      - "traefik.http.routers.server-team-allocation.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.api-ratelimit.ratelimit.average=300"
      - "traefik.http.middlewares.api-ratelimit.ratelimit.burst=100"
      - "traefik.http.routers.server-team-allocation.middlewares=api-ratelimit"
    depends_on:
      db-team-allocation:
        condition: service_healthy
    expose:
      - "8080"
    environment:
      - CORE_HOST
      - SERVER_CORE_HOST
      - SERVER_ADDRESS
      - DB_HOST_TEAM_ALLOCATION
      - DB_PORT_TEAM_ALLOCATION
      - DB_NAME
      - DB_PASSWORD
      - KEYCLOAK_HOST
      - KEYCLOAK_REALM_NAME
    networks:
      - prompt-network

  server-assessment:
    image: "ghcr.io/ls1intum/prompt2/prompt-server-assessment:${SERVER_ASSESSMENT_IMAGE_TAG}"
    container_name: prompt-server-assessment
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server-assessment.rule=Host(`${CORE_HOST}`) && PathPrefix(`/assessment/api`)"
      - "traefik.http.services.server-assessment.loadbalancer.server.port=8080"
      - "traefik.http.routers.server-assessment.entrypoints=websecure"
      - "traefik.http.routers.server-assessment.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.api-ratelimit.ratelimit.average=300"
      - "traefik.http.middlewares.api-ratelimit.ratelimit.burst=100"
      - "traefik.http.routers.server-assessment.middlewares=api-ratelimit"
    depends_on:
      db-assessment:
        condition: service_healthy
    expose:
      - "8080"
    environment:
      - CORE_HOST
      - SERVER_CORE_HOST
      - SERVER_ADDRESS
      - DB_HOST_ASSESSMENT
      - DB_PORT_ASSESSMENT
      - DB_NAME
      - DB_PASSWORD
      - KEYCLOAK_HOST
      - KEYCLOAK_REALM_NAME
    networks:
      - prompt-network

  db:
    image: "postgres:15.2-alpine"
    container_name: prompt-db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - TZ=Europe/Berlin
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - prompt-network

  client-assessment-component:
    image: "ghcr.io/ls1intum/prompt2/prompt-clients-assessment-component:${ASSESSMENT_IMAGE_TAG}"
    container_name: prompt-client-assessment-component
    environment:
      - TZ=Europe/Berlin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.assessment.rule=Host(`${CORE_HOST}`) && PathPrefix(`/assessment`)"
      - "traefik.http.routers.assessment.entrypoints=websecure"
      - "traefik.http.routers.assessment.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.assessment-strip-prefix.stripPrefix.prefixes=/assessment"
      - "traefik.http.routers.assessment.middlewares=assessment-strip-prefix,assessment-compress"
      - "traefik.http.middlewares.assessment-compress.compress=true"
    expose:
      - "80"
    depends_on:
      - server-core
    networks:
      - prompt-network

  db-intro-course:
    image: "postgres:15.2-alpine"
    container_name: prompt-db-intro-course
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - TZ=Europe/Berlin
    volumes:
      - ./postgres_intro_course_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - prompt-network

  db-team-allocation:
    image: "postgres:15.2-alpine"
    container_name: prompt-db-team-allocation
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - TZ=Europe/Berlin
    volumes:
      - ./postgres_team_allocation_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - prompt-network

  db-assessment:
    image: "postgres:15.2-alpine"
    container_name: prompt-db-assessment
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - TZ=Europe/Berlin
    volumes:
      - ./postgres_assessment_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - prompt-network

  client-devops-challenge-component:
    image: "ghcr.io/ls1intum/prompt2/prompt-clients-devops-challenge-component:${DEVOPS_CHALLENGE_IMAGE_TAG}"
    container_name: prompt-client-devops-challenge-component
    environment:
      - TZ=Europe/Berlin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.devops-challenge.rule=Host(`${CORE_HOST}`) && PathPrefix(`/devops-challenge`)"
      - "traefik.http.routers.devops-challenge.entrypoints=websecure"
      - "traefik.http.routers.devops-challenge.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.devops-challenge-strip-prefix.stripPrefix.prefixes=/devops-challenge"
      - "traefik.http.routers.devops-challenge.middlewares=devops-challenge-strip-prefix,devops-challenge-compress"
      - "traefik.http.middlewares.devops-challenge-compress.compress=true"
    expose:
      - "80"
    depends_on:
      - server-core
    networks:
      - prompt-network

  client-intro-course-developer-component:
    image: "ghcr.io/ls1intum/prompt2/prompt-clients-intro-course-developer-component:${INTRO_COURSE_DEVELOPER_IMAGE_TAG}"
    container_name: prompt-client-intro-course-developer-component
    environment:
      - TZ=Europe/Berlin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.intro-course-developer.rule=Host(`${CORE_HOST}`) && PathPrefix(`/intro-course-developer`)"
      - "traefik.http.routers.intro-course-developer.entrypoints=websecure"
      - "traefik.http.routers.intro-course-developer.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.intro-course-developer-strip-prefix.stripPrefix.prefixes=/intro-course-developer"
      - "traefik.http.routers.intro-course-developer.middlewares=intro-course-developer-strip-prefix,intro-course-developer-compress"
      - "traefik.http.middlewares.intro-course-developer-compress.compress=true"
    expose:
      - "80"
    depends_on:
      - server-core
      - server-intro-course
    networks:
      - prompt-network

  client-intro-course-tutor-component:
    image: "ghcr.io/ls1intum/prompt2/prompt-clients-intro-course-tutor-component:${INTRO_COURSE_TUTOR_IMAGE_TAG}"
    container_name: prompt-client-intro-course-tutor-component
    environment:
      - TZ=Europe/Berlin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.intro-course-tutor.rule=Host(`${CORE_HOST}`) && PathPrefix(`/intro-course-tutor`)"
      - "traefik.http.routers.intro-course-tutor.entrypoints=websecure"
      - "traefik.http.routers.intro-course-tutor.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.intro-course-tutor-strip-prefix.stripPrefix.prefixes=/intro-course-tutor"
      - "traefik.http.routers.intro-course-tutor.middlewares=intro-course-tutor-strip-prefix,intro-course-tutor-compress"
      - "traefik.http.middlewares.intro-course-tutor-compress.compress=true"
    expose:
      - "80"
    depends_on:
      - server-core
      - server-intro-course
    networks:
      - prompt-network

  client-interview-component:
    image: "ghcr.io/ls1intum/prompt2/prompt-clients-interview-component:${INTERVIEW_IMAGE_TAG}"
    container_name: prompt-client-interview-component
    environment:
      - TZ=Europe/Berlin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.interview.rule=Host(`${CORE_HOST}`) && PathPrefix(`/interview`)"
      - "traefik.http.routers.interview.entrypoints=websecure"
      - "traefik.http.routers.interview.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.interview-strip-prefix.stripPrefix.prefixes=/interview"
      - "traefik.http.routers.interview.middlewares=interview-strip-prefix,interview-compress"
      - "traefik.http.middlewares.interview-compress.compress=true"
    expose:
      - "80"
    depends_on:
      - server-core
    networks:
      - prompt-network

  client-matching-component:
    image: "ghcr.io/ls1intum/prompt2/prompt-clients-matching-component:${MATCHING_IMAGE_TAG}"
    container_name: prompt-client-matching-component
    environment:
      - TZ=Europe/Berlin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.matching.rule=Host(`${CORE_HOST}`) && PathPrefix(`/matching`)"
      - "traefik.http.routers.matching.entrypoints=websecure"
      - "traefik.http.routers.matching.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.matching-strip-prefix.stripPrefix.prefixes=/matching"
      - "traefik.http.routers.matching.middlewares=matching-strip-prefix,matching-compress"
      - "traefik.http.middlewares.matching-compress.compress=true"
    expose:
      - "80"
    depends_on:
      - server-core
    networks:
      - prompt-network

  client-team-allocation-component:
    image: "ghcr.io/ls1intum/prompt2/prompt-clients-team-allocation-component:${TEAM_ALLOCATION_IMAGE_TAG}"
    container_name: prompt-client-team-allocation-component
    environment:
      - TZ=Europe/Berlin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.team-allocation.rule=Host(`${CORE_HOST}`) && PathPrefix(`/team-allocation`)"
      - "traefik.http.routers.team-allocation.entrypoints=websecure"
      - "traefik.http.routers.team-allocation.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.team-allocation-strip-prefix.stripPrefix.prefixes=/team-allocation"
      - "traefik.http.routers.team-allocation.middlewares=team-allocation-strip-prefix,team-allocation-compress"
      - "traefik.http.middlewares.team-allocation-compress.compress=true"
    expose:
      - "80"
    depends_on:
      - server-core
    networks:
      - prompt-network

  client-template-component:
    image: "ghcr.io/ls1intum/prompt2/prompt-clients-template-component:${TEMPLATE_IMAGE_TAG}"
    container_name: prompt-client-template-component
    environment:
      - TZ=Europe/Berlin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.template.rule=Host(`${CORE_HOST}`) && PathPrefix(`/template`)"
      - "traefik.http.routers.template.entrypoints=websecure"
      - "traefik.http.routers.template.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.template-strip-prefix.stripPrefix.prefixes=/template"
      - "traefik.http.routers.template.middlewares=template-strip-prefix,template-compress"
      - "traefik.http.middlewares.template-compress.compress=true"
    expose:
      - "80"
    depends_on:
      - server-core
    networks:
      - prompt-network

  client-core:
    image: "ghcr.io/ls1intum/prompt2/prompt-clients-core:${CORE_IMAGE_TAG}"
    container_name: prompt-client-core
    environment:
      - TZ=Europe/Berlin
      - CORE_HOST
      - KEYCLOAK_HOST
      - KEYCLOAK_REALM_NAME
      - CHAIR_NAME_SHORT
      - CHAIR_NAME_LONG
      - GITHUB_SHA
      - GITHUB_REF
      - SERVER_IMAGE_TAG
      - INTRO_COURSE_HOST
      - DEVOPS_CHALLENGE_HOST
      - ASSESSMENT_HOST
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.core.rule=Host(`${CORE_HOST}`)"
      - "traefik.http.routers.core.entrypoints=websecure"
      - "traefik.http.routers.core.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.core-compress.compress=true"
    expose:
      - "80"
    depends_on:
      - server-core
    networks:
      - prompt-network

  postfix:
    image: ghcr.io/ls1admin/postfix:latest
    container_name: prompt-postfix
    restart: unless-stopped
    volumes:
      - ./postfix-config:/config
    hostname: ${CORE_HOST}
    networks:
      - prompt-network

networks:
  # Create network manually in advance: docker network create prompt-network
  prompt-network:
    name: prompt-network
    external: true

#####################################################################################################################
# Warning: Make sure that `/etc/hosts` on the your machine contains the 127.0.0.1 idp.local line.
#####################################################################################################################

services:
  server-core:
    build:
      context: ./servers/core
      dockerfile: ../Dockerfile
    container_name: prompt-server-core
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    ports:
      - "8080:8080"
    extra_hosts:
      - "idp.local:host-gateway"
    environment:
      - CORE_HOST=http://localhost:3000
      - DB_USER=prompt-postgres
      - DB_PASSWORD=prompt-postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=prompt
      - SSL_MODE=disable
      - SERVER_ADDRESS=:8080
      - KEYCLOAK_HOST=http://idp.local:8081
      - KEYCLOAK_REALM_NAME=prompt
      - KEYCLOAK_CLIENT_ID=prompt-server
      - KEYCLOAK_CLIENT_SECRET=
      - KEYCLOAK_ID_OF_CLIENT=
      - KEYCLOAK_AUTHORIZED_PARTY=prompt-client
  
  server-assessment:
    image: "ghcr.io/ls1intum/prompt2/prompt-server-assessment:latest"
    container_name: prompt-server-assessment
    depends_on:
      db-assessment:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    ports:
      - "8084:8080"
    extra_hosts:
      - "idp.local:host-gateway"
    environment:
      - CORE_HOST=http://localhost:3000
      - SERVER_CORE_HOST=http://server-core:8080
      - SERVER_ADDRESS=0.0.0.0:8080
      - DB_HOST_ASSESSMENT=db-assessment
      - DB_PORT_ASSESSMENT=5432
      - DB_NAME=prompt
      - DB_USER=prompt-postgres
      - DB_PASSWORD=prompt-postgres
      - KEYCLOAK_HOST=http://idp.local:8081
      - KEYCLOAK_REALM_NAME=prompt

  server-intro-course:
    image: "ghcr.io/ls1intum/prompt2/prompt-server-intro-course:latest"
    container_name: prompt-server-intro-course
    depends_on:
      db-intro-course:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    ports:
      - "8082:8080"
    extra_hosts:
      - "idp.local:host-gateway"
    environment:
      - CORE_HOST=http://localhost:3000
      - SERVER_CORE_HOST=http://server-core:8080
      - SERVER_ADDRESS=0.0.0.0:8080
      - DB_HOST_INTRO_COURSE=db-intro-course
      - DB_PORT_INTRO_COURSE=5432
      - DB_NAME=prompt
      - DB_USER=prompt-postgres
      - DB_PASSWORD=prompt-postgres
      - KEYCLOAK_HOST=http://idp.local:8081
      - KEYCLOAK_REALM_NAME=prompt

  server-team-allocation:
    image: "ghcr.io/ls1intum/prompt2/prompt-server-team-allocation:latest"
    container_name: prompt-server-team-allocation
    depends_on:
      db-team-allocation:
        condition: service_healthy
    ports:
      - "8083:8080"
    extra_hosts:
      - "idp.local:host-gateway"
    environment:
      - CORE_HOST=http://localhost:3000
      - SERVER_CORE_HOST=http://localhost:8080
      - SERVER_ADDRESS=0.0.0.0:8080
      - DB_HOST_TEAM_ALLOCATION=db-team-allocation
      - DB_PORT_TEAM_ALLOCATION=5432
      - DB_NAME=prompt
      - DB_USER=prompt-postgres
      - DB_PASSWORD=prompt-postgres
      - KEYCLOAK_HOST=http://idp.local:8081
      - KEYCLOAK_REALM_NAME=prompt

  client-core:
    build:
      context: ./clients/core
      dockerfile: Dockerfile
      args:                    
        IMAGE_TAG: ${IMAGE_TAG:-latest}
        NODE_ENV: development
    container_name: prompt-client-core
    environment:
      - IMAGE_TAG=latest
      - TZ=Europe/Berlin
      - CORE_HOST=http://localhost:8080
      - KEYCLOAK_HOST=http://idp.local:8081
      - KEYCLOAK_REALM_NAME=prompt
      - CHAIR_NAME_SHORT=Applied Education Technologies
      - CHAIR_NAME_LONG=TUM Research Group for Applied Education Technologies
      - INTRO_COURSE_HOST=http://localhost:8082
      - DEVOPS_CHALLENGE_HOST
      - TEAM_ALLOCATION_HOST=http://localhost:8083
      - ASSESSMENT_HOST=http://localhost:8084
    ports:
      - "3000:80"
    depends_on:
      - server-core

  client-assessment-component:
    build:
      context: ./clients/assessment_component
      dockerfile: Dockerfile
      args:                    
        IMAGE_TAG: ${IMAGE_TAG:-latest}
    container_name: prompt-client-assessment-component
    environment:
      - TZ=Europe/Berlin
    ports:
      - "3007:80"
    depends_on:
      - server-core
      - server-assessment
      - db-assessment

  client-devops-challenge-component:
    build:
      context: ./clients/devops_challenge_component
      dockerfile: Dockerfile
      args:                    
        IMAGE_TAG: ${IMAGE_TAG:-latest}
    container_name: prompt-client-devops-challenge-component
    environment:
      - TZ=Europe/Berlin
    ports:
      - "3006:80"
    depends_on:
      - server-core

  client-interview-component:
    build:
      context: ./clients/interview_component
      dockerfile: Dockerfile
      args:                    
        IMAGE_TAG: ${IMAGE_TAG:-latest}
    container_name: prompt-client-interview-component
    environment:
      - TZ=Europe/Berlin
    ports:
      - "3002:80"
    depends_on:
      - server-core
  
  client-intro-course-component:
    build:
      context: ./clients/intro_course_developer_component
      dockerfile: Dockerfile
      args:                    
        IMAGE_TAG: ${IMAGE_TAG:-latest}
    container_name: prompt-client-intro-course-component
    environment:
      - TZ=Europe/Berlin
    ports:
      - "3005:80"
    depends_on:
      - server-core

  client-matching-component:
    build:
      context: ./clients/matching_component
      dockerfile: Dockerfile
      args:                    
        IMAGE_TAG: ${IMAGE_TAG:-latest}
    container_name: prompt-client-matching-component
    environment:
      - TZ=Europe/Berlin
    ports:
      - "3003:80"
    depends_on:
      - server-core

  client-team-allocation-component:
    build:
      context: ./clients/team_allocation_component
      dockerfile: Dockerfile
      args:                    
        IMAGE_TAG: ${IMAGE_TAG:-latest}
    container_name: prompt-client-team-allocation-component
    environment:
      - TZ=Europe/Berlin
    ports:
      - "3008:80"
    depends_on:
      - server-core
      - server-team-allocation

  db:
    image: "postgres:15.2-alpine"
    container_name: prompt-core-db
    environment:
      - POSTGRES_USER=prompt-postgres
      - POSTGRES_PASSWORD=prompt-postgres
      - POSTGRES_DB=prompt
      - TZ=Europe/Berlin
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d prompt -U prompt-postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  db-intro-course:
    image: "postgres:15.2-alpine"
    container_name: prompt-intro-course-db
    environment:
      - POSTGRES_USER=prompt-postgres
      - POSTGRES_PASSWORD=prompt-postgres
      - POSTGRES_DB=prompt
      - TZ=Europe/Berlin
    volumes:
      - ./postgres_intro_course_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d prompt -U prompt-postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432"

  db-team-allocation:
    image: "postgres:15.2-alpine"
    container_name: prompt-team-allocation-db
    environment:
      - POSTGRES_USER=prompt-postgres
      - POSTGRES_PASSWORD=prompt-postgres
      - POSTGRES_DB=prompt
      - TZ=Europe/Berlin
    volumes:
      - ./postgres_team_allocation_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d prompt -U prompt-postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5434:5432"

  db-assessment:
    image: "postgres:15.2-alpine"
    container_name: prompt-assessment-db
    environment:
      - POSTGRES_USER=prompt-postgres
      - POSTGRES_PASSWORD=prompt-postgres
      - POSTGRES_DB=prompt
      - TZ=Europe/Berlin
    volumes:
      - ./postgres_assessment_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d prompt -U prompt-postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5435:5432"

  keycloak-db:
    image: "postgres:15.2-alpine"
    container_name: prompt-keycloak-db
    environment:
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak
      - POSTGRES_DB=keycloak
      - TZ=Europe/Berlin
    volumes:
      - ./keycloak_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5431:5432"

  keycloak:
    image: quay.io/keycloak/keycloak:25.0
    container_name: prompt-keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_PORT: 5432
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME_URL: http://idp.local:8081   
      KC_HOSTNAME_STRICT: 'false' 
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    entrypoint: /opt/keycloak/bin/kc.sh start-dev
    extra_hosts:
      - "idp.local:host-gateway"  
    depends_on:
      keycloak-db:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "8081:8080"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'exec 3<>/dev/tcp/localhost/8080; echo -e "GET /health/ready HTTP/1.1\nhost: localhost:8080\n" >&3; timeout --preserve-status 1 cat <&3 | grep -m 1 status | grep -m 1 UP; ERROR=$?; exec 3<&-; exec 3>&-; exit',
        ]

  # postfix:
  #   image: ghcr.io/ls1admin/postfix:latest
  #   container_name: prompt-postfix
  #   restart: unless-stopped
  #   volumes:
  #     - ./postfix-config:/config # See https://github.com/ls1admin/postfix-container-tum-mailrelay/tree/main for details
  #   hostname: prompt.ase.cit.tum.de
  #   ports:
  #     - "25:25"
